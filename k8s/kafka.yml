apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  replicas: 1
  serviceName: zookeeper-service
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      securityContext:
        runAsUser: 1000
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.0.1
          ports:
            - containerPort: 2181
              name: communication
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          volumeMounts:
            - name: zookeeper-data
              mountPath: /var/lib/zookeeper/data
            - name: zookeeper-logs
              mountPath: /var/lib/zookeeper/log
      volumes:
        - name: zookeeper-data
          persistentVolumeClaim:
            claimName: zookeeper-data
        - name: zookeeper-logs
          persistentVolumeClaim:
            claimName: zookeeper-logs
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  type: NodePort
  selector:
    app: zookeeper
  ports:
    - name: communication
      protocol: TCP
      port: 2181
      targetPort: communication
      nodePort: 30130
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 1
  serviceName: kafka-service
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        runAsUser: 1000
      containers:
        - name: kafka
          image: confluentinc/cp-enterprise-kafka:7.0.1
          ports:
            - containerPort: 9092
              name: internal
            - containerPort: 9093
              name: external
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,EXTERNAL_LISTENER:PLAINTEXT"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-service:9092,EXTERNAL_LISTENER://localhost:30140"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,EXTERNAL_LISTENER://0.0.0.0:9093"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  type: NodePort
  selector:
    app: kafka
  ports:
    - name: external
      protocol: TCP
      port: 9093
      targetPort: external
      nodePort: 30140
    - name: internal
      protocol: TCP
      port: 9092
      targetPort: internal
      nodePort: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-schema-registry-deployment
  labels:
    app: schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:7.0.1
          ports:
            - containerPort: 8081
              name: internal
          env:
            - name: SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
              value: "zookeeper-service:2181"
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: "schema-registry-service"
            - name: SCHEMA_REGISTRY_LISTENERS
              value: "http://0.0.0.0:8081"
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka-service:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry-service
spec:
  selector:
    app: schema-registry
  ports:
    - name: internal
      protocol: TCP
      port: 8081
      targetPort: internal
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-rest-deployment
  labels:
    app: kafka-rest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-rest
  template:
    metadata:
      labels:
        app: kafka-rest
    spec:
      containers:
        - name: kafka-rest
          image: confluentinc/cp-kafka-rest:7.0.1
          ports:
            - containerPort: 8082
              name: internal
          env:
            - name: KAFKA_REST_ZOOKEEPER_CONNECT
              value: "zookeeper-service:2181"
            - name: KAFKA_REST_HOST_NAME
              value: "kafka-rest-service"
            - name: KAFKA_REST_LISTENERS
              value: "http://0.0.0.0:8082"
            - name: KAFKA_REST_SCHEMA_REGISTRY_URL
              value: "http://schema-registry-service:8081"
            - name: KAFKA_REST_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka-service:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-rest-service
spec:
  selector:
    app: kafka-rest
  ports:
    - name: internal
      protocol: TCP
      port: 8082
      targetPort: internal
